generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

/// Временная таблица Патента с извл. данными при поиске перед парсингом
model PatentGoogleTemp {
  id                   String  @id
  url                  String  @unique
  title                String?
  assignee             String?
  inventorOrAuthor     String?
  priorityDate         String? // YYYY-MM-DD
  filingOrCreationDate String? // YYYY-MM-DD
  publicationDate      String? // YYYY-MM-DD
  grantDate            String? // YYYY-MM-DD
}

enum QueueElementTypeEnum {
  GooglePatent
  YandexPatent
  ArticleRU
  ArticleEN
}

model QueueElement {
  /// Ссылка
  url       String               @id
  /// Тип элемента в очереди
  type      QueueElementTypeEnum
  /// Когда началась обработка (в случае истечения ожидания, можно начать снова)
  startedAt DateTime?            @db.Timestamptz
  /// Кол-во попыток обработки
  tries     Int                  @default(0)
  /// Приоритет
  priority  Int                  @default(0)

  // Служебные поля
  createdAt DateTime @default(now()) @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz
}
